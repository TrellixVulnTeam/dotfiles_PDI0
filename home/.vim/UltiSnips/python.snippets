snippet todo "Add a TODO" b
# TODO(${2:`whoami`}): ${1:Implement this}
endsnippet

snippet "# todo" "Add a TODO" b
# TODO(${2:`whoami`}): ${1:Implement this}
endsnippet

snippet pub "Add public visibility to a bazel target" b
visibility = ["//visibility:public"],
endsnippet

snippet pyl "Bazel py_library" b
py_library(
	name = "$1",
	srcs = [
		"$1.py",
	],
	deps = [
	],
	imports = [
	],
	srcs_version = "PY3",
)
endsnippet

snippet pyb "Bazel py_binary" b
py_binary(
	name = "$1",
	srcs = [
		"$1.py",
	],
	default_python_version = "PY3",
	main = "$1.py",
	srcs_version = "PY3",
	deps = [
	],
)
endsnippet

snippet pyt "Bazel py_test" b
py_test(
	name = "$1_test",
	main = "$1_test.py",
	srcs = [
		"$1_test.py",
	],
	deps = [
		":$1",
	],
	srcs_version = "PY3",
	default_python_version = "PY3",
)
endsnippet

snippet ccl "Bazel cc_library" b
cc_library(
	name = "$1",
	hdrs = [
		"$1.h",
	],
	srcs = [
		"$1.cc",
	],
	deps = [
	],
)
endsnippet

snippet ccb "Bazel cc_binary" b
cc_binary(
	name = "$1",
	srcs = [
		"$1.cc",
	],
	deps = [
	],
)
endsnippet

snippet cct "Bazel cc_test" b
cc_test(
	name = "$1_test",
	srcs = [
		"$1_test.cc",
	],
	deps = [
		":$1",
	],
)
endsnippet

snippet sht "Bazel sh_test" b
sh_test(
	name = "$1_test",
	size = "small",
	srcs = [
		"$1_test.sh",
	],
	data = [
	],
	deps = [
		":$1",
	],
)
endsnippet

snippet shb "Bazel sh_binary" b
sh_binary(
	name = "$1",
	srcs = [
		"$1.sh",
	],
	deps = [
	],
)
endsnippet

snippet gen "Bazel genrule" b
genrule(
	name = "$1",
	srcs = [
	],
	outs = [
	],
	tools = [
	],
	cmd = "${2:cp foo bar}",
)
endsnippet

snippet peloton "Add the Peloton copyright header" b
# Copyright (C) `!v strftime("%Y")` Peloton Technology, Inc. - All Rights Reserved
# Author: Philipp Schrader (philipp@peloton-tech.com)

endsnippet

snippet fg "Bazel filegroup" b
filegroup(
	name = "$1",
	srcs = [
		$2
	],
)
endsnippet

snippet deps "Adds a bazel 'deps' field" b
deps = [
	$1
],
endsnippet

snippet robot "Add a bazel robot_test target" b
robot_test(
	name = "$1",
	srcs = [
		"$1.robot",
	],
	args = [
		"--exclude=DISABLED",
	],
	loglevel = "DEBUG",
)
endsnippet

snippet env "Add shebang" b
#!/usr/bin/env python3

endsnippet

snippet testmain "Inserts a unittest.main() invocation" b
if __name__ == '__main__':
	unittest.main()
endsnippet
